export class Torque {
  constructor() {
    this.density = 1000; // ูุซุงูุฉ ุงููุงุก ุจุงูููููุบุฑุงู ููู ูุชุฑ ููุนุจ
    this.area = 23; // ูุณุงุญุฉ ุงูุฒุนุงูู ุจุงููุชุฑ ุงููุฑุจุน
    this.liftCoefficient = 1.0; // ูุนุงูู ุงูุฑูุน (ูุชู ุชุญุฏูุฏู ุจูุงุกู ุนูู ุดูู ุงูุฒุนููุฉ ูุฒุงููุฉ ุงููุฌูู)
  }

  calculateForce(velocity) {
    // ๐น = 0.5 * ฯ * v^2 * A * C_L
    return (
      0.5 *
      this.density *
      Math.pow(velocity, 2) *
      this.area *
      this.liftCoefficient
    );
  }

  calculateTorque(force, distance, angle) {
    // ฯ = r * F * sin(ฮธ)
    return distance * force * Math.sin(angle);
  }
}
